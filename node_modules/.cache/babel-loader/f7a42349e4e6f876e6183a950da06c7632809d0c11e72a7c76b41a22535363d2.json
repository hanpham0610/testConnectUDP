{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\", true);\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.chartData && $data.chartData.labels.length ? (_openBlock(), _createBlock(_component_line_chart, {\n    key: 0,\n    \"chart-data\": $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","$data","chartData","labels","length","_createBlock","_component_line_chart","key","options","chartOptions","_createCommentVNode"],"sources":["D:\\FE-VM\\democline\\src\\components\\LineChart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <line-chart v-if=\"chartData && chartData.labels.length\" :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Line } from 'vue-chartjs';\r\n  import { Chart, registerables } from 'chart.js';\r\n  \r\n  Chart.register(...registerables);\r\n  \r\n  export default {\r\n    components: {\r\n      'line-chart': Line\r\n    },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: [], // Sẽ chứa các giá trị thời gian (phút)\r\n          datasets: [\r\n            {\r\n              label: 'Value 1',\r\n              borderColor: 'red',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 1\r\n            },\r\n            {\r\n              label: 'Value 2',\r\n              borderColor: 'blue',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 2\r\n            },\r\n            {\r\n              label: 'Value 3',\r\n              borderColor: 'green',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 3\r\n            },\r\n            {\r\n              label: 'Value 4',\r\n              borderColor: 'orange',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 4\r\n            }\r\n          ]\r\n        },\r\n        chartOptions: {\r\n          scales: {\r\n            x: {\r\n              type: 'linear',\r\n              title: {\r\n                display: true,\r\n                text: 'Minutes'\r\n              },\r\n              min: 0,\r\n              max: 30\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'Values'\r\n              },\r\n              min: 0,\r\n              max: 100\r\n            }\r\n          }\r\n        },\r\n        currentMinute: 0 // Sẽ tăng dần sau mỗi lần nhận được dữ liệu mới\r\n      };\r\n    },\r\n    mounted() {\r\n      // Đảm bảo rằng chartData tồn tại trước khi sử dụng nó\r\n      if (this.chartData) {\r\n        console.log(\"Chart data initialized correctly\");\r\n      }\r\n    },\r\n    methods: {\r\n      addData(dataString) {\r\n        const values = dataString.split('-').map(Number);\r\n        if (values.length === 4) {\r\n          this.currentMinute++;\r\n          this.chartData.labels.push(this.currentMinute);\r\n  \r\n          this.chartData.datasets[0].data.push(values[0]);\r\n          this.chartData.datasets[1].data.push(values[1]);\r\n          this.chartData.datasets[2].data.push(values[2]);\r\n          this.chartData.datasets[3].data.push(values[3]);\r\n  \r\n          if (this.chartData.labels.length > 30) {\r\n            this.chartData.labels.shift();\r\n            this.chartData.datasets.forEach(dataset => dataset.data.shift());\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;;uBACIA,mBAAA,CAEM,cADcC,KAAA,CAAAC,SAAS,IAAID,KAAA,CAAAC,SAAS,CAACC,MAAM,CAACC,MAAM,I,cAAtDC,YAAA,CAAqHC,qBAAA;IAF3HC,GAAA;IAE+D,YAAU,EAAEN,KAAA,CAAAC,SAAS;IAAGM,OAAO,EAAEP,KAAA,CAAAQ;wDAFhGC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}