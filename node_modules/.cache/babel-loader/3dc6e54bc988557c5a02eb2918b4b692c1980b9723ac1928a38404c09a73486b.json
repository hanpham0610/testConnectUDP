{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Line } from 'vue-chartjs';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  components: {\n    'line-chart': Line\n  },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        // Sẽ chứa các giá trị thời gian (phút)\n        datasets: [{\n          label: 'Value 1',\n          borderColor: 'red',\n          fill: false,\n          data: [] // Dữ liệu cho giá trị 1\n        }, {\n          label: 'Value 2',\n          borderColor: 'blue',\n          fill: false,\n          data: [] // Dữ liệu cho giá trị 2\n        }, {\n          label: 'Value 3',\n          borderColor: 'green',\n          fill: false,\n          data: [] // Dữ liệu cho giá trị 3\n        }, {\n          label: 'Value 4',\n          borderColor: 'orange',\n          fill: false,\n          data: [] // Dữ liệu cho giá trị 4\n        }]\n      },\n      chartOptions: {\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Minutes'\n            },\n            min: 0,\n            max: 30\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Values'\n            },\n            min: 0,\n            max: 100\n          }\n        }\n      },\n      currentMinute: 0 // Sẽ tăng dần sau mỗi lần nhận được dữ liệu mới\n    };\n  },\n  mounted() {\n    // Đảm bảo rằng chartData tồn tại trước khi sử dụng nó\n    if (this.chartData) {\n      console.log(\"Chart data initialized correctly\");\n    }\n  },\n  methods: {\n    addData(dataString) {\n      const values = dataString.split('-').map(Number);\n      if (values.length === 4) {\n        this.currentMinute++;\n        this.chartData.labels.push(this.currentMinute);\n        this.chartData.datasets[0].data.push(values[0]);\n        this.chartData.datasets[1].data.push(values[1]);\n        this.chartData.datasets[2].data.push(values[2]);\n        this.chartData.datasets[3].data.push(values[3]);\n        if (this.chartData.labels.length > 30) {\n          this.chartData.labels.shift();\n          this.chartData.datasets.forEach(dataset => dataset.data.shift());\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["Line","Chart","registerables","register","components","data","chartData","labels","datasets","label","borderColor","fill","chartOptions","scales","x","type","title","display","text","min","max","y","currentMinute","mounted","console","log","methods","addData","dataString","values","split","map","Number","length","push","shift","forEach","dataset"],"sources":["D:\\FE-VM\\democline\\src\\components\\LineChart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <line-chart v-if=\"chartData && chartData.labels.length\" :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Line } from 'vue-chartjs';\r\n  import { Chart, registerables } from 'chart.js';\r\n  \r\n  Chart.register(...registerables);\r\n  \r\n  export default {\r\n    components: {\r\n      'line-chart': Line\r\n    },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: [], // Sẽ chứa các giá trị thời gian (phút)\r\n          datasets: [\r\n            {\r\n              label: 'Value 1',\r\n              borderColor: 'red',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 1\r\n            },\r\n            {\r\n              label: 'Value 2',\r\n              borderColor: 'blue',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 2\r\n            },\r\n            {\r\n              label: 'Value 3',\r\n              borderColor: 'green',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 3\r\n            },\r\n            {\r\n              label: 'Value 4',\r\n              borderColor: 'orange',\r\n              fill: false,\r\n              data: [] // Dữ liệu cho giá trị 4\r\n            }\r\n          ]\r\n        },\r\n        chartOptions: {\r\n          scales: {\r\n            x: {\r\n              type: 'linear',\r\n              title: {\r\n                display: true,\r\n                text: 'Minutes'\r\n              },\r\n              min: 0,\r\n              max: 30\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'Values'\r\n              },\r\n              min: 0,\r\n              max: 100\r\n            }\r\n          }\r\n        },\r\n        currentMinute: 0 // Sẽ tăng dần sau mỗi lần nhận được dữ liệu mới\r\n      };\r\n    },\r\n    mounted() {\r\n      // Đảm bảo rằng chartData tồn tại trước khi sử dụng nó\r\n      if (this.chartData) {\r\n        console.log(\"Chart data initialized correctly\");\r\n      }\r\n    },\r\n    methods: {\r\n      addData(dataString) {\r\n        const values = dataString.split('-').map(Number);\r\n        if (values.length === 4) {\r\n          this.currentMinute++;\r\n          this.chartData.labels.push(this.currentMinute);\r\n  \r\n          this.chartData.datasets[0].data.push(values[0]);\r\n          this.chartData.datasets[1].data.push(values[1]);\r\n          this.chartData.datasets[2].data.push(values[2]);\r\n          this.chartData.datasets[3].data.push(values[3]);\r\n  \r\n          if (this.chartData.labels.length > 30) {\r\n            this.chartData.labels.shift();\r\n            this.chartData.datasets.forEach(dataset => dataset.data.shift());\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}