{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"UDP Data\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"table\", {\n  class: \"table table-striped table-hover\"\n}, \" ... \", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"IP:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Message:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Time:\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString(item.ip) + \" \", 1 /* TEXT */), _hoisted_5, _createTextVNode(\" \" + _toDisplayString(item.message) + \" \", 1 /* TEXT */), _hoisted_6, _createTextVNode(\" \" + _toDisplayString(item.timestamp), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","messages","item","index","key","_hoisted_4","_createTextVNode","_toDisplayString","ip","_hoisted_5","message","_hoisted_6","timestamp"],"sources":["D:\\FE-VM\\democline\\src\\components\\testConnect.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <h1>UDP Data</h1>\r\n      <table class=\"table table-striped table-hover\">\r\n  ...\r\n</table>\r\n      <ul>\r\n        <li v-for=\"(item, index) in messages\" :key=\"index\">\r\n          <strong>IP:</strong> {{ item.ip }} <strong>Message:</strong> {{ item.message }} <strong>Time:</strong> {{ item.timestamp }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        messages: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      const ws = new WebSocket('ws://localhost:8081');\r\n      ws.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        this.messages.push(data);\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Add your styles here */\r\n  </style>\r\n  "],"mappings":";;EACSA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAAiB,YAAb,UAAQ;gCACZA,mBAAA,CAEE;EAFKC,KAAK,EAAC;AAAiC,GAAC,OAErD;gCAGUD,mBAAA,CAAoB,gBAAZ,KAAG;gCAAwBA,mBAAA,CAAyB,gBAAjB,UAAQ;gCAA6BA,mBAAA,CAAsB,gBAAd,OAAK;;uBAPnGE,mBAAA,CAUM,OAVNC,UAUM,GATJC,UAAiB,EACjBC,UAEE,EACFL,mBAAA,CAIK,c,kBAHHE,mBAAA,CAEKI,SAAA,QATbC,WAAA,CAOoCC,KAAA,CAAAC,QAAQ,EAP5C,CAOoBC,IAAI,EAAEC,KAAK;yBAAvBT,mBAAA,CAEK;MAFkCU,GAAG,EAAED;IAAK,IAC/CE,UAAoB,EAR9BC,gBAAA,CAQ8B,GAAC,GAAAC,gBAAA,CAAGL,IAAI,CAACM,EAAE,IAAG,GAAC,iBAAAC,UAAyB,EARtEH,gBAAA,CAQsE,GAAC,GAAAC,gBAAA,CAAGL,IAAI,CAACQ,OAAO,IAAG,GAAC,iBAAAC,UAAsB,EARhHL,gBAAA,CAQgH,GAAC,GAAAC,gBAAA,CAAGL,IAAI,CAACU,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}