{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-12 col-md-3\"\n};\nconst _hoisted_4 = {\n  id: \"app\"\n};\nconst _hoisted_5 = {\n  class: \"table table-striped table-hover\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"IP\")]), /*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"Data\")]), /*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"Time\")])])], -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"col-12 col-md-9\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"popup\"\n};\nexport function render(_ctx, _cache) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.messages, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.ip), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.message), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formattedTimestamp(item.timestamp)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createCommentVNode(\" Biểu đồ được hiển thị trong cột bên cạnh \"), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_line_chart, {\n    ref: \"lineChart\",\n    \"chart-data\": _ctx.chartData,\n    options: _ctx.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])])]), _createCommentVNode(\" Popup confirmation dialog \"), _ctx.showPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, \"Bạn có muốn nhận dữ liệu từ IP \" + _toDisplayString(_ctx.currentIp) + \"?\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.acceptData && _ctx.acceptData(...args))\n  }, \"Đồng ý\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.rejectData && _ctx.rejectData(...args))\n  }, \"Từ chối\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","_ctx","messages","item","index","_toDisplayString","ip","message","formattedTimestamp","timestamp","_createCommentVNode","_hoisted_7","_createVNode","_component_line_chart","ref","chartData","options","chartOptions","showPopup","_hoisted_8","currentIp","onClick","_cache","args","acceptData","rejectData"],"sources":["D:\\FE-VM\\democline\\src\\components\\testConnect.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid\"> \r\n      <div class=\"row\"> \r\n        <div class=\"col-12 col-md-3\">  \r\n          <div id=\"app\">\r\n            <table class=\"table table-striped table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th><strong>IP</strong></th>\r\n                  <th><strong>Data</strong></th>\r\n                  <th><strong>Time</strong></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(item, index) in messages\" :key=\"index\">\r\n                  <td>{{ item.ip }}</td>\r\n                  <td>{{ item.message }}</td>\r\n                  <td>{{ formattedTimestamp(item.timestamp) }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>   \r\n  \r\n        <!-- Biểu đồ được hiển thị trong cột bên cạnh -->\r\n        <div class=\"col-12 col-md-9\">    \r\n          <line-chart ref=\"lineChart\" :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Popup confirmation dialog -->\r\n      <div v-if=\"showPopup\" class=\"popup\">\r\n        <p>Bạn có muốn nhận dữ liệu từ IP {{ currentIp }}?</p>\r\n        <button @click=\"acceptData\">Đồng ý</button>\r\n        <button @click=\"rejectData\">Từ chối</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Line } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    LineElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n  } from 'chart.js';\r\n  \r\n  ChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement);\r\n  \r\n  export default {\r\n    components: {\r\n      LineChart: {\r\n        extends: Line,\r\n        props: ['chartData', 'options'],\r\n        methods: {\r\n            addData(data) {\r\n  console.log('Adding data:', data); // Thêm dòng này để kiểm tra dữ liệu\r\n  if (!data) {\r\n    console.error('No data provided');\r\n    return;\r\n  }\r\n\r\n  const values = data.split('-').map(Number);\r\n  if (values.length !== this.chartData.datasets.length) {\r\n    console.error('Data length does not match number of datasets');\r\n    return;\r\n  }\r\n\r\n  // Add new label\r\n  this.chartData.labels.push(`${this.chartData.labels.length + 1} phút`);\r\n\r\n  // Update datasets with new values\r\n  values.forEach((value, index) => {\r\n    if (this.chartData.datasets[index]) {\r\n      this.chartData.datasets[index].data.push(value);\r\n    }\r\n  });\r\n\r\n  // Maintain only the last 30 minutes of data\r\n  if (this.chartData.labels.length > 30) {\r\n    this.chartData.labels.shift();\r\n    this.chartData.datasets.forEach((dataset) => dataset.data.shift());\r\n  }\r\n\r\n  this.$data._chart.update(); // Update chart\r\n},\r\n        }\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        messages: [],\r\n        acceptedIps: [],\r\n        showPopup: false,\r\n        currentIp: '',\r\n        pendingData: null,\r\n        chartData: {\r\n          labels: [],\r\n          datasets: [\r\n            { label: 'Param 1', backgroundColor: 'rgba(75, 192, 192, 0.2)', borderColor: 'rgba(75, 192, 192, 1)', data: [] },\r\n            { label: 'Param 2', backgroundColor: 'rgba(54, 162, 235, 0.2)', borderColor: 'rgba(54, 162, 235, 1)', data: [] },\r\n            { label: 'Param 3', backgroundColor: 'rgba(255, 206, 86, 0.2)', borderColor: 'rgba(255, 206, 86, 1)', data: [] },\r\n            { label: 'Param 4', backgroundColor: 'rgba(153, 102, 255, 0.2)', borderColor: 'rgba(153, 102, 255, 1)', data: [] },\r\n          ],\r\n        },\r\n        chartOptions: {\r\n          responsive: true,\r\n          scales: {\r\n            x: { title: { display: true, text: 'Thời gian (phút)' } },\r\n            y: { title: { display: true, text: 'Giá trị tham số' }, min: 0, max: 100 },\r\n          },\r\n        },\r\n      };\r\n    },\r\n    mounted() {\r\n      const ws = new WebSocket('ws://localhost:8081');\r\n      ws.onmessage = (event) => {\r\n  const data = JSON.parse(event.data);\r\n  console.log('Received data:', data);\r\n\r\n  if (data && data.ip && data.message) {\r\n    if (!this.acceptedIps.includes(data.ip)) {\r\n      this.currentIp = data.ip;\r\n      this.pendingData = data;\r\n      this.showPopup = true;\r\n    } else {\r\n      this.messages.push(data);\r\n\r\n      // Wait for the chart to be rendered\r\n      this.$nextTick(() => {\r\n        console.log('Pending data before adding to chart:', this.pendingData); // Kiểm tra giá trị của pendingData\r\n        if (this.$refs.lineChart && this.$refs.lineChart.addData) {\r\n          this.$refs.lineChart.addData(data.message);\r\n        } else {\r\n          console.error('Line chart or addData method is not available');\r\n        }\r\n      });\r\n    }\r\n  } else {\r\n    console.error('Received data is invalid', data);\r\n  }\r\n};\r\n\r\n    },\r\n    methods: {\r\n        acceptData() {\r\n  console.log('Pending data in acceptData:', this.pendingData); // Kiểm tra giá trị của pendingData\r\n  if (this.pendingData && this.pendingData.message) {\r\n    this.acceptedIps.push(this.currentIp);\r\n    this.messages.push(this.pendingData);\r\n\r\n    // Wait for the chart to be rendered\r\n    this.$nextTick(() => {\r\n      console.log('Pending data before adding to chart:', this.pendingData.message); // Kiểm tra giá trị của pendingData.message\r\n      if (this.$refs.lineChart && this.$refs.lineChart.addData) {\r\n        this.$refs.lineChart.addData(this.pendingData.message);\r\n      } else {\r\n        console.error('Line chart or addData method is not available');\r\n      }\r\n    });\r\n\r\n    this.clearPopup();\r\n  } else {\r\n    console.error('Pending data or message is null or undefined');\r\n  }\r\n}\r\n\r\n\r\n\r\n      rejectData() {\r\n        this.clearPopup();\r\n      },\r\n      clearPopup() {\r\n        this.showPopup = false;\r\n        this.currentIp = '';\r\n        this.pendingData = null;\r\n      },\r\n      formattedTimestamp(timestamp) {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleString('en-US', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit',\r\n          hour12: false,\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .popup {\r\n    position: fixed;\r\n    top: 20%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    padding: 20px;\r\n    border: 1px solid black;\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .popup button {\r\n    margin-right: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAiB;;EACrBC,EAAE,EAAC;AAAK;;EACJD,KAAK,EAAC;AAAiC;gCAC5CE,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAA4B,a,aAAxBA,mBAAA,CAAmB,gBAAX,IAAE,E,gBACdA,mBAAA,CAA8B,a,aAA1BA,mBAAA,CAAqB,gBAAb,MAAI,E,gBAChBA,mBAAA,CAA8B,a,aAA1BA,mBAAA,CAAqB,gBAAb,MAAI,E;;EAerBF,KAAK,EAAC;AAAiB;;EAzBpCG,GAAA;EA+B4BH,KAAK,EAAC;;;;uBA9B9BI,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJH,mBAAA,CA0BM,OA1BNI,UA0BM,GAzBJJ,mBAAA,CAmBM,OAnBNK,UAmBM,GAlBJL,mBAAA,CAiBM,OAjBNM,UAiBM,GAhBJN,mBAAA,CAeQ,SAfRO,UAeQ,GAdNC,UAMQ,EACRR,mBAAA,CAMQ,iB,kBALNE,mBAAA,CAIKO,SAAA,QAlBrBC,WAAA,CAc4CC,IAAA,CAAAC,QAAQ,EAdpD,CAc4BC,IAAI,EAAEC,KAAK;yBAAvBZ,mBAAA,CAIK;MAJkCD,GAAG,EAAEa;IAAK,IAC/Cd,mBAAA,CAAsB,YAAAe,gBAAA,CAAfF,IAAI,CAACG,EAAE,kBACdhB,mBAAA,CAA2B,YAAAe,gBAAA,CAApBF,IAAI,CAACI,OAAO,kBACnBjB,mBAAA,CAAiD,YAAAe,gBAAA,CAA1CJ,IAAA,CAAAO,kBAAkB,CAACL,IAAI,CAACM,SAAS,kB;0CAOlDC,mBAAA,8CAAiD,EACjDpB,mBAAA,CAEM,OAFNqB,UAEM,GADJC,YAAA,CAAyFC,qBAAA;IAA7EC,GAAG,EAAC,WAAW;IAAE,YAAU,EAAEb,IAAA,CAAAc,SAAS;IAAGC,OAAO,EAAEf,IAAA,CAAAgB;0DAIlEP,mBAAA,+BAAkC,EACvBT,IAAA,CAAAiB,SAAS,I,cAApB1B,mBAAA,CAIM,OAJN2B,UAIM,GAHJ7B,mBAAA,CAAsD,WAAnD,iCAA+B,GAAAe,gBAAA,CAAGJ,IAAA,CAAAmB,SAAS,IAAG,GAAC,iBAClD9B,mBAAA,CAA2C;IAAlC+B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,IAAA,CAAAuB,UAAA,IAAAvB,IAAA,CAAAuB,UAAA,IAAAD,IAAA,CAAU;KAAE,QAAM,GAClCjC,mBAAA,CAA4C;IAAnC+B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,IAAA,CAAAwB,UAAA,IAAAxB,IAAA,CAAAwB,UAAA,IAAAF,IAAA,CAAU;KAAE,SAAO,E,KAlC3Cb,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}